defmodule AshManyMany.Repo.TenantMigrations.AddMemberAndMultitenancy do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:members, primary_key: false, prefix: prefix()) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :email, :text, null: false
      add :name, :text, null: false

      add :organisation_id,
          references(:organisations,
            column: :id,
            prefix: "public",
            name: "members_organisation_id_fkey",
            type: :uuid
          ),
          null: false

      add :user_id,
          references(:users,
            column: :id,
            name: "members_user_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create unique_index(:members, [:email], name: "members_unique_email_index")
  end

  def down do
    drop_if_exists unique_index(:members, [:email], name: "members_unique_email_index")

    drop constraint(:members, "members_organisation_id_fkey")

    drop constraint(:members, "members_user_id_fkey")

    drop table(:members, prefix: prefix())
  end
end